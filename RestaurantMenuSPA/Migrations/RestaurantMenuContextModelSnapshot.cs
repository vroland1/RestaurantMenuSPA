// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantMenuSPA.Models.Context;

namespace RestaurantMenuSPA.Migrations
{
    [DbContext(typeof(RestaurantMenuContext))]
    partial class RestaurantMenuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantMenuSPA.Models.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCurrentlyOnMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tortilla chips with homemade salsa and queso",
                            IsCurrentlyOnMenu = true,
                            Name = "Chips and Salsa",
                            Price = 6.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Red pepper hummus, pitas, celery, carrots and cucumber",
                            IsCurrentlyOnMenu = true,
                            Name = "Hummus Plate",
                            Price = 9.49m
                        },
                        new
                        {
                            Id = 3,
                            Description = "A dozen salted soft pretzels bites served with queso and mustard on side",
                            IsCurrentlyOnMenu = true,
                            Name = "Pretzel Bites",
                            Price = 7.59m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Six chicken wings, onion rings, mozzerella sticks, fried pickles served with a side of ranch",
                            IsCurrentlyOnMenu = true,
                            Name = "Combo Platter",
                            Price = 13.99m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Our signature burger with cheese, lettuce, tomato, onion, pickle and mayo",
                            IsCurrentlyOnMenu = true,
                            Name = "Classic Burger",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tender roast beef with grilled onions, green peppers, mushrooms, and provolone cheese",
                            IsCurrentlyOnMenu = true,
                            Name = "Philly Cheese Steak Sandwich",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 7,
                            Description = "A triple-decker served on your choice of bread or toast; includes turkey, bacon, lettuce, tomato, mayo and American cheese",
                            IsCurrentlyOnMenu = true,
                            Name = "Smoked Turkey Club Sandwich",
                            Price = 8.49m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Romaine lettuce, grilled chicken breast, tomato, provolone and mozzarella cheese, Caesar dressing and croutons",
                            IsCurrentlyOnMenu = true,
                            Name = "Chicken Casesar Salad",
                            Price = 7.29m
                        },
                        new
                        {
                            Id = 9,
                            Description = "An iceberg wedge topped with blue cheese dressing and crumbles, piled high with bacon, chives and tomato",
                            IsCurrentlyOnMenu = true,
                            Name = "Wedge Salad",
                            Price = 7.29m
                        },
                        new
                        {
                            Id = 10,
                            Description = "Scoop of vanilla, chocolate, and strawberry ice cream with banana, cherry and hot fudge on top",
                            IsCurrentlyOnMenu = true,
                            Name = "Banana Split",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 11,
                            Description = "White cheddar over rotini noodles with hickory smoked bacon bits and bread crumbs",
                            IsCurrentlyOnMenu = true,
                            Name = "Bacon Mac and Cheese",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 12,
                            IsCurrentlyOnMenu = true,
                            Name = "French Fries",
                            Price = 2.99m
                        },
                        new
                        {
                            Id = 13,
                            IsCurrentlyOnMenu = true,
                            Name = "Cole Slaw",
                            Price = 2.99m
                        },
                        new
                        {
                            Id = 14,
                            IsCurrentlyOnMenu = true,
                            Name = "Onion Rings",
                            Price = 3.99m
                        },
                        new
                        {
                            Id = 15,
                            IsCurrentlyOnMenu = true,
                            Name = "Mac and Cheese",
                            Price = 3.99m
                        },
                        new
                        {
                            Id = 16,
                            IsCurrentlyOnMenu = true,
                            Name = "Side Salad",
                            Price = 2.99m
                        },
                        new
                        {
                            Id = 17,
                            IsCurrentlyOnMenu = true,
                            Name = "Three Bean Chili",
                            Price = 3.99m
                        },
                        new
                        {
                            Id = 18,
                            Description = "Flavors chocolate, vanilla, strawberry, caramel, banana",
                            IsCurrentlyOnMenu = true,
                            Name = "Milk Shake",
                            Price = 2.99m
                        },
                        new
                        {
                            Id = 19,
                            IsCurrentlyOnMenu = true,
                            Name = "Coke",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = 20,
                            IsCurrentlyOnMenu = true,
                            Name = "Diet Coke",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = 21,
                            IsCurrentlyOnMenu = true,
                            Name = "Sprite",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = 22,
                            IsCurrentlyOnMenu = true,
                            Name = "Ketchup",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 23,
                            IsCurrentlyOnMenu = true,
                            Name = "Mustard",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 24,
                            IsCurrentlyOnMenu = true,
                            Name = "Ranch",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 25,
                            IsCurrentlyOnMenu = true,
                            Name = "Mayo",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 26,
                            Description = "Double Chocolate- Rich, fudgy chocolate cake filled and frosted with our house chocolate buttercream",
                            IsCurrentlyOnMenu = true,
                            Name = "Slice of Chocolate Cake",
                            Price = 2.5m
                        });
                });

            modelBuilder.Entity("RestaurantMenuSPA.Models.Entities.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Regular Side"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Premium Side"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Entree"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drink"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Condiment"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sandwich"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Soup"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Salad"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Appetizer"
                        });
                });

            modelBuilder.Entity("RestaurantMenuSPA.Models.MenuItemType", b =>
                {
                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("MenuItemTypes");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            TypeId = 11
                        },
                        new
                        {
                            MenuItemId = 2,
                            TypeId = 11
                        },
                        new
                        {
                            MenuItemId = 3,
                            TypeId = 11
                        },
                        new
                        {
                            MenuItemId = 4,
                            TypeId = 11
                        },
                        new
                        {
                            MenuItemId = 5,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 5,
                            TypeId = 7
                        },
                        new
                        {
                            MenuItemId = 6,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 6,
                            TypeId = 7
                        },
                        new
                        {
                            MenuItemId = 7,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 7,
                            TypeId = 7
                        },
                        new
                        {
                            MenuItemId = 8,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 8,
                            TypeId = 9
                        },
                        new
                        {
                            MenuItemId = 9,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 9,
                            TypeId = 9
                        },
                        new
                        {
                            MenuItemId = 10,
                            TypeId = 5
                        },
                        new
                        {
                            MenuItemId = 11,
                            TypeId = 3
                        },
                        new
                        {
                            MenuItemId = 11,
                            TypeId = 10
                        },
                        new
                        {
                            MenuItemId = 12,
                            TypeId = 1
                        },
                        new
                        {
                            MenuItemId = 13,
                            TypeId = 1
                        },
                        new
                        {
                            MenuItemId = 14,
                            TypeId = 2
                        },
                        new
                        {
                            MenuItemId = 15,
                            TypeId = 2
                        },
                        new
                        {
                            MenuItemId = 15,
                            TypeId = 10
                        },
                        new
                        {
                            MenuItemId = 16,
                            TypeId = 1
                        },
                        new
                        {
                            MenuItemId = 16,
                            TypeId = 9
                        },
                        new
                        {
                            MenuItemId = 17,
                            TypeId = 2
                        },
                        new
                        {
                            MenuItemId = 17,
                            TypeId = 8
                        },
                        new
                        {
                            MenuItemId = 18,
                            TypeId = 4
                        },
                        new
                        {
                            MenuItemId = 18,
                            TypeId = 5
                        },
                        new
                        {
                            MenuItemId = 19,
                            TypeId = 4
                        },
                        new
                        {
                            MenuItemId = 20,
                            TypeId = 4
                        },
                        new
                        {
                            MenuItemId = 21,
                            TypeId = 4
                        },
                        new
                        {
                            MenuItemId = 22,
                            TypeId = 6
                        },
                        new
                        {
                            MenuItemId = 23,
                            TypeId = 6
                        },
                        new
                        {
                            MenuItemId = 24,
                            TypeId = 6
                        },
                        new
                        {
                            MenuItemId = 25,
                            TypeId = 6
                        },
                        new
                        {
                            MenuItemId = 26,
                            TypeId = 5
                        });
                });

            modelBuilder.Entity("RestaurantMenuSPA.Models.MenuItemType", b =>
                {
                    b.HasOne("RestaurantMenuSPA.Models.Entities.MenuItem", "MenuItem")
                        .WithMany("MenuItemTypes")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantMenuSPA.Models.Entities.Type", "Type")
                        .WithMany("MenuItemTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
